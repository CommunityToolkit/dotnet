<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;netstandard2.1;net6.0</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup>
    <Title>.NET Community Toolkit - MVVM</Title>
    <Description>
      This package includes a .NET MVVM library with helpers such as:
      - ObservableObject: a base class for objects implementing the INotifyPropertyChanged interface.
      - ObservableRecipient: a base class for observable objects with support for the IMessenger service.
      - ObservableValidator: a base class for objects implementing the INotifyDataErrorInfo interface.
      - RelayCommand: a simple delegate command implementing the ICommand interface.
      - AsyncRelayCommand: a delegate command supporting asynchronous operations and cancellation.
      - WeakReferenceMessenger: a messaging system to exchange messages through different loosely-coupled objects.
      - StrongReferenceMessenger: a high-performance messaging system that trades weak references for speed.
      - Ioc: a helper class to configure dependency injection service containers.
    </Description>
    <PackageTags>MVVM;Toolkit;MVVMToolkit;INotifyPropertyChanged;Observable;IOC;DI;Dependency Injection;Object Messaging;Extensions;Helpers</PackageTags>
  </PropertyGroup>

  <!-- Necessary polyfills -->
  <PropertyGroup>
    <PolySharpIncludeGeneratedTypes>
      System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute;
      System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute;
      System.Diagnostics.CodeAnalysis.MemberNotNullAttribute;
      System.Diagnostics.CodeAnalysis.NotNullAttribute;
      System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute;
      System.Diagnostics.CodeAnalysis.NotNullWhenAttribute;
      System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute;
      System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute;
      System.Runtime.CompilerServices.CallerArgumentExpressionAttribute;
      System.Runtime.CompilerServices.IsExternalInit;
      System.Runtime.CompilerServices.SkipLocalsInitAttribute;
    </PolySharpIncludeGeneratedTypes>
  </PropertyGroup>

  <!-- Add the [InternalsVisibleTo] attribute for the test project -->
  <ItemGroup>
    <InternalsVisibleTo Include="CommunityToolkit.Mvvm.Internals.UnitTests" />
  </ItemGroup>

  <!--
      Include a custom targets file to check the compiler version required for the source generator.
      It needs Roslyn 4.x and including the targets in .NET 6+ is not needed as it guarantees the same.
  -->
  <ItemGroup>
    <None Include="CommunityToolkit.Mvvm.targets" Pack="True" PackagePath="build\netstandard2.0" />
    <None Include="CommunityToolkit.Mvvm.targets" Pack="True" PackagePath="build\netstandard2.1" />
    <None Include="CommunityToolkit.Mvvm.targets" Pack="True" PackagePath="buildTransitive\netstandard2.0" />
    <None Include="CommunityToolkit.Mvvm.targets" Pack="True" PackagePath="buildTransitive\netstandard2.1" />
  </ItemGroup>

  <!-- .NET Standard 2.0 doesn't have the Span<T> and IAsyncEnumerable<T> types -->
  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="7.0.0" />
    <PackageReference Include="System.ComponentModel.Annotations" Version="5.0.0" />
    <PackageReference Include="System.Memory" Version="4.5.5" />
    <PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="6.0.0" />
  </ItemGroup>

  <!-- .NET Standard 2.1 doesn't have the Unsafe type -->
  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.1'">
    <PackageReference Include="System.ComponentModel.Annotations" Version="5.0.0" />
    <PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="6.0.0" />
  </ItemGroup>

  <!-- Reference the various multi-targeted versions of the source generator project (one per Roslyn version) -->
  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <ProjectReference Include="..\CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.Roslyn40.csproj" ReferenceOutputAssembly="false" />
    <ProjectReference Include="..\CommunityToolkit.Mvvm.SourceGenerators\CommunityToolkit.Mvvm.SourceGenerators.Roslyn43.csproj" ReferenceOutputAssembly="false" />
  </ItemGroup>

  <!--
      Pack the source generator build outputs to the correct package folders (for each target Roslyn version)
      for them to be used as analyzers. Roslyn compilers will automatically load the highest version compatible
      with the Roslyn's version in the SDK.

      HACK: The recommended way to pack is to get the build outputs using the project's built-in targets,
            and include them using NuGet's Pack targets. However, due to a bug in v5 of those targets,
            the outputs were not included in the package. So, including them directly via final
            output path and building it first is the only way to ensure they are included.
  -->
  <ItemGroup>
    <None Include="..\CommunityToolkit.Mvvm.SourceGenerators\bin\$(Configuration)\netstandard2.0-roslyn4.0\CommunityToolkit.Mvvm.SourceGenerators.dll" PackagePath="analyzers\dotnet\roslyn4.0\cs" Pack="true" Visible="false" />
    <None Include="..\CommunityToolkit.Mvvm.SourceGenerators\bin\$(Configuration)\netstandard2.0-roslyn4.3\CommunityToolkit.Mvvm.SourceGenerators.dll" PackagePath="analyzers\dotnet\roslyn4.3\cs" Pack="true" Visible="false" />
  </ItemGroup>

</Project>